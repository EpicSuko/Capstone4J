// Generated by jextract

package com.suko.capstone4j.internal;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

/**
 * {@snippet lang=c :
 * union {
 *     aarch64_svcr svcr;
 *     aarch64_at at;
 *     aarch64_db db;
 *     aarch64_dc dc;
 *     aarch64_isb isb;
 *     aarch64_tsb tsb;
 *     aarch64_prfm prfm;
 *     aarch64_sveprfm sveprfm;
 *     aarch64_rprfm rprfm;
 *     aarch64_pstateimm0_15 pstateimm0_15;
 *     aarch64_pstateimm0_1 pstateimm0_1;
 *     aarch64_psb psb;
 *     aarch64_bti bti;
 *     aarch64_svepredpat svepredpat;
 *     aarch64_sveveclenspecifier sveveclenspecifier;
 *     int raw_val;
 * }
 * }
 */
public class aarch64_sysop_alias {

    aarch64_sysop_alias() {
        // Should not be called directly
    }

    private static final GroupLayout $LAYOUT = MemoryLayout.unionLayout(
        capstone_h.C_INT.withName("svcr"),
        capstone_h.C_INT.withName("at"),
        capstone_h.C_INT.withName("db"),
        capstone_h.C_INT.withName("dc"),
        capstone_h.C_INT.withName("isb"),
        capstone_h.C_INT.withName("tsb"),
        capstone_h.C_INT.withName("prfm"),
        capstone_h.C_INT.withName("sveprfm"),
        capstone_h.C_INT.withName("rprfm"),
        capstone_h.C_INT.withName("pstateimm0_15"),
        capstone_h.C_INT.withName("pstateimm0_1"),
        capstone_h.C_INT.withName("psb"),
        capstone_h.C_INT.withName("bti"),
        capstone_h.C_INT.withName("svepredpat"),
        capstone_h.C_INT.withName("sveveclenspecifier"),
        capstone_h.C_INT.withName("raw_val")
    ).withName("$anon$1991:9");

    /**
     * The layout of this union
     */
    public static final GroupLayout layout() {
        return $LAYOUT;
    }

    private static final OfInt svcr$LAYOUT = (OfInt)$LAYOUT.select(groupElement("svcr"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_svcr svcr
     * }
     */
    public static final OfInt svcr$layout() {
        return svcr$LAYOUT;
    }

    private static final long svcr$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_svcr svcr
     * }
     */
    public static final long svcr$offset() {
        return svcr$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_svcr svcr
     * }
     */
    public static int svcr(MemorySegment union) {
        return union.get(svcr$LAYOUT, svcr$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_svcr svcr
     * }
     */
    public static void svcr(MemorySegment union, int fieldValue) {
        union.set(svcr$LAYOUT, svcr$OFFSET, fieldValue);
    }

    private static final OfInt at$LAYOUT = (OfInt)$LAYOUT.select(groupElement("at"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_at at
     * }
     */
    public static final OfInt at$layout() {
        return at$LAYOUT;
    }

    private static final long at$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_at at
     * }
     */
    public static final long at$offset() {
        return at$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_at at
     * }
     */
    public static int at(MemorySegment union) {
        return union.get(at$LAYOUT, at$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_at at
     * }
     */
    public static void at(MemorySegment union, int fieldValue) {
        union.set(at$LAYOUT, at$OFFSET, fieldValue);
    }

    private static final OfInt db$LAYOUT = (OfInt)$LAYOUT.select(groupElement("db"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_db db
     * }
     */
    public static final OfInt db$layout() {
        return db$LAYOUT;
    }

    private static final long db$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_db db
     * }
     */
    public static final long db$offset() {
        return db$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_db db
     * }
     */
    public static int db(MemorySegment union) {
        return union.get(db$LAYOUT, db$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_db db
     * }
     */
    public static void db(MemorySegment union, int fieldValue) {
        union.set(db$LAYOUT, db$OFFSET, fieldValue);
    }

    private static final OfInt dc$LAYOUT = (OfInt)$LAYOUT.select(groupElement("dc"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_dc dc
     * }
     */
    public static final OfInt dc$layout() {
        return dc$LAYOUT;
    }

    private static final long dc$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_dc dc
     * }
     */
    public static final long dc$offset() {
        return dc$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_dc dc
     * }
     */
    public static int dc(MemorySegment union) {
        return union.get(dc$LAYOUT, dc$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_dc dc
     * }
     */
    public static void dc(MemorySegment union, int fieldValue) {
        union.set(dc$LAYOUT, dc$OFFSET, fieldValue);
    }

    private static final OfInt isb$LAYOUT = (OfInt)$LAYOUT.select(groupElement("isb"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_isb isb
     * }
     */
    public static final OfInt isb$layout() {
        return isb$LAYOUT;
    }

    private static final long isb$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_isb isb
     * }
     */
    public static final long isb$offset() {
        return isb$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_isb isb
     * }
     */
    public static int isb(MemorySegment union) {
        return union.get(isb$LAYOUT, isb$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_isb isb
     * }
     */
    public static void isb(MemorySegment union, int fieldValue) {
        union.set(isb$LAYOUT, isb$OFFSET, fieldValue);
    }

    private static final OfInt tsb$LAYOUT = (OfInt)$LAYOUT.select(groupElement("tsb"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_tsb tsb
     * }
     */
    public static final OfInt tsb$layout() {
        return tsb$LAYOUT;
    }

    private static final long tsb$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_tsb tsb
     * }
     */
    public static final long tsb$offset() {
        return tsb$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_tsb tsb
     * }
     */
    public static int tsb(MemorySegment union) {
        return union.get(tsb$LAYOUT, tsb$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_tsb tsb
     * }
     */
    public static void tsb(MemorySegment union, int fieldValue) {
        union.set(tsb$LAYOUT, tsb$OFFSET, fieldValue);
    }

    private static final OfInt prfm$LAYOUT = (OfInt)$LAYOUT.select(groupElement("prfm"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_prfm prfm
     * }
     */
    public static final OfInt prfm$layout() {
        return prfm$LAYOUT;
    }

    private static final long prfm$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_prfm prfm
     * }
     */
    public static final long prfm$offset() {
        return prfm$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_prfm prfm
     * }
     */
    public static int prfm(MemorySegment union) {
        return union.get(prfm$LAYOUT, prfm$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_prfm prfm
     * }
     */
    public static void prfm(MemorySegment union, int fieldValue) {
        union.set(prfm$LAYOUT, prfm$OFFSET, fieldValue);
    }

    private static final OfInt sveprfm$LAYOUT = (OfInt)$LAYOUT.select(groupElement("sveprfm"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_sveprfm sveprfm
     * }
     */
    public static final OfInt sveprfm$layout() {
        return sveprfm$LAYOUT;
    }

    private static final long sveprfm$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_sveprfm sveprfm
     * }
     */
    public static final long sveprfm$offset() {
        return sveprfm$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_sveprfm sveprfm
     * }
     */
    public static int sveprfm(MemorySegment union) {
        return union.get(sveprfm$LAYOUT, sveprfm$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_sveprfm sveprfm
     * }
     */
    public static void sveprfm(MemorySegment union, int fieldValue) {
        union.set(sveprfm$LAYOUT, sveprfm$OFFSET, fieldValue);
    }

    private static final OfInt rprfm$LAYOUT = (OfInt)$LAYOUT.select(groupElement("rprfm"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_rprfm rprfm
     * }
     */
    public static final OfInt rprfm$layout() {
        return rprfm$LAYOUT;
    }

    private static final long rprfm$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_rprfm rprfm
     * }
     */
    public static final long rprfm$offset() {
        return rprfm$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_rprfm rprfm
     * }
     */
    public static int rprfm(MemorySegment union) {
        return union.get(rprfm$LAYOUT, rprfm$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_rprfm rprfm
     * }
     */
    public static void rprfm(MemorySegment union, int fieldValue) {
        union.set(rprfm$LAYOUT, rprfm$OFFSET, fieldValue);
    }

    private static final OfInt pstateimm0_15$LAYOUT = (OfInt)$LAYOUT.select(groupElement("pstateimm0_15"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_pstateimm0_15 pstateimm0_15
     * }
     */
    public static final OfInt pstateimm0_15$layout() {
        return pstateimm0_15$LAYOUT;
    }

    private static final long pstateimm0_15$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_pstateimm0_15 pstateimm0_15
     * }
     */
    public static final long pstateimm0_15$offset() {
        return pstateimm0_15$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_pstateimm0_15 pstateimm0_15
     * }
     */
    public static int pstateimm0_15(MemorySegment union) {
        return union.get(pstateimm0_15$LAYOUT, pstateimm0_15$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_pstateimm0_15 pstateimm0_15
     * }
     */
    public static void pstateimm0_15(MemorySegment union, int fieldValue) {
        union.set(pstateimm0_15$LAYOUT, pstateimm0_15$OFFSET, fieldValue);
    }

    private static final OfInt pstateimm0_1$LAYOUT = (OfInt)$LAYOUT.select(groupElement("pstateimm0_1"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_pstateimm0_1 pstateimm0_1
     * }
     */
    public static final OfInt pstateimm0_1$layout() {
        return pstateimm0_1$LAYOUT;
    }

    private static final long pstateimm0_1$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_pstateimm0_1 pstateimm0_1
     * }
     */
    public static final long pstateimm0_1$offset() {
        return pstateimm0_1$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_pstateimm0_1 pstateimm0_1
     * }
     */
    public static int pstateimm0_1(MemorySegment union) {
        return union.get(pstateimm0_1$LAYOUT, pstateimm0_1$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_pstateimm0_1 pstateimm0_1
     * }
     */
    public static void pstateimm0_1(MemorySegment union, int fieldValue) {
        union.set(pstateimm0_1$LAYOUT, pstateimm0_1$OFFSET, fieldValue);
    }

    private static final OfInt psb$LAYOUT = (OfInt)$LAYOUT.select(groupElement("psb"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_psb psb
     * }
     */
    public static final OfInt psb$layout() {
        return psb$LAYOUT;
    }

    private static final long psb$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_psb psb
     * }
     */
    public static final long psb$offset() {
        return psb$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_psb psb
     * }
     */
    public static int psb(MemorySegment union) {
        return union.get(psb$LAYOUT, psb$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_psb psb
     * }
     */
    public static void psb(MemorySegment union, int fieldValue) {
        union.set(psb$LAYOUT, psb$OFFSET, fieldValue);
    }

    private static final OfInt bti$LAYOUT = (OfInt)$LAYOUT.select(groupElement("bti"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_bti bti
     * }
     */
    public static final OfInt bti$layout() {
        return bti$LAYOUT;
    }

    private static final long bti$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_bti bti
     * }
     */
    public static final long bti$offset() {
        return bti$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_bti bti
     * }
     */
    public static int bti(MemorySegment union) {
        return union.get(bti$LAYOUT, bti$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_bti bti
     * }
     */
    public static void bti(MemorySegment union, int fieldValue) {
        union.set(bti$LAYOUT, bti$OFFSET, fieldValue);
    }

    private static final OfInt svepredpat$LAYOUT = (OfInt)$LAYOUT.select(groupElement("svepredpat"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_svepredpat svepredpat
     * }
     */
    public static final OfInt svepredpat$layout() {
        return svepredpat$LAYOUT;
    }

    private static final long svepredpat$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_svepredpat svepredpat
     * }
     */
    public static final long svepredpat$offset() {
        return svepredpat$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_svepredpat svepredpat
     * }
     */
    public static int svepredpat(MemorySegment union) {
        return union.get(svepredpat$LAYOUT, svepredpat$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_svepredpat svepredpat
     * }
     */
    public static void svepredpat(MemorySegment union, int fieldValue) {
        union.set(svepredpat$LAYOUT, svepredpat$OFFSET, fieldValue);
    }

    private static final OfInt sveveclenspecifier$LAYOUT = (OfInt)$LAYOUT.select(groupElement("sveveclenspecifier"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * aarch64_sveveclenspecifier sveveclenspecifier
     * }
     */
    public static final OfInt sveveclenspecifier$layout() {
        return sveveclenspecifier$LAYOUT;
    }

    private static final long sveveclenspecifier$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * aarch64_sveveclenspecifier sveveclenspecifier
     * }
     */
    public static final long sveveclenspecifier$offset() {
        return sveveclenspecifier$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * aarch64_sveveclenspecifier sveveclenspecifier
     * }
     */
    public static int sveveclenspecifier(MemorySegment union) {
        return union.get(sveveclenspecifier$LAYOUT, sveveclenspecifier$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * aarch64_sveveclenspecifier sveveclenspecifier
     * }
     */
    public static void sveveclenspecifier(MemorySegment union, int fieldValue) {
        union.set(sveveclenspecifier$LAYOUT, sveveclenspecifier$OFFSET, fieldValue);
    }

    private static final OfInt raw_val$LAYOUT = (OfInt)$LAYOUT.select(groupElement("raw_val"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * int raw_val
     * }
     */
    public static final OfInt raw_val$layout() {
        return raw_val$LAYOUT;
    }

    private static final long raw_val$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * int raw_val
     * }
     */
    public static final long raw_val$offset() {
        return raw_val$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * int raw_val
     * }
     */
    public static int raw_val(MemorySegment union) {
        return union.get(raw_val$LAYOUT, raw_val$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * int raw_val
     * }
     */
    public static void raw_val(MemorySegment union, int fieldValue) {
        union.set(raw_val$LAYOUT, raw_val$OFFSET, fieldValue);
    }

    /**
     * Obtains a slice of {@code arrayParam} which selects the array element at {@code index}.
     * The returned segment has address {@code arrayParam.address() + index * layout().byteSize()}
     */
    public static MemorySegment asSlice(MemorySegment array, long index) {
        return array.asSlice(layout().byteSize() * index);
    }

    /**
     * The size (in bytes) of this union
     */
    public static long sizeof() { return layout().byteSize(); }

    /**
     * Allocate a segment of size {@code layout().byteSize()} using {@code allocator}
     */
    public static MemorySegment allocate(SegmentAllocator allocator) {
        return allocator.allocate(layout());
    }

    /**
     * Allocate an array of size {@code elementCount} using {@code allocator}.
     * The returned segment has size {@code elementCount * layout().byteSize()}.
     */
    public static MemorySegment allocateArray(long elementCount, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(elementCount, layout()));
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, Arena arena, Consumer<MemorySegment> cleanup) {
        return reinterpret(addr, 1, arena, cleanup);
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code elementCount * layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, long elementCount, Arena arena, Consumer<MemorySegment> cleanup) {
        return addr.reinterpret(layout().byteSize() * elementCount, arena, cleanup);
    }
}

